---
name: "PlantUML"
description: "Generate PlantUML diagrams as SVGs"
inputs:
  github-token:
    description: "A GitHub PAT used to commit and push generated SVGs back into the repository."
    required: true
  ghcr-username:
    description: "The username to use to login to ghcr.io."
    required: true
  ghcr-password:
    description: "The password to use to login to ghcr.io."
    required: true
runs:
  using: "composite"
  steps:
    # https://github.com/docker/login-action/blob/7f58925/README.md#github-container-registry
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ inputs.ghcr-username }}
        password: ${{ inputs.ghcr-password }}

    - uses: actions/checkout@v4
      with:
        token: ${{ inputs.github-token }}
        fetch-depth: 0

    - id: update-files
      name: Perform updates
      shell: python
      run: |
        import json
        import os
        import subprocess
        from pathlib import Path

        github_context = json.loads("${{ toJSON(github) }}")
        workspace = Path(github_context["workspace"])

        changed_files = {}

        for commit in github_context["event"]["commits"]:
            for name in ("added", "modified", "removed"):
                for filepath in commit[name]:
                    changed_files[Path(filepath)] = name != "removed"

        # "True" values are added or changed files
        # "False" values have been removed
        changes_made = False

        for path, keep_svg in changed_files.items():
            svg_path = path.with_suffix(".svg")
            if not keep_svg:
                # Remove the corresponding SVG file (if found)
                try:
                    svg_path.unlink()
                    changes_made = True
                except FileNotFoundError:
                    pass

                continue

            # This path _should_ already be relative to the workspace, but just
            # make sure
            mount_dir = Path("/data")
            mount_path = Path(
                mount_dir,
                path.resolve().relative_to(workspace)
            )

            changes_made = True

            # Run the docker image to update the SVG
            with svg_path.open(mode="wb") as outfile:
                subprocess.run(
                    [
                        "docker",
                        "run",
                        "-i",
                        "-v", f"{workspace}:{mount_dir}",
                        "ghcr.io/uclahs-cds/plantuml-github-action:v2.0.0",
                        "-DPLANTUML_LIMIT_SIZE=8192",
                        "-tsvg",
                        mount_path
                    ],
                    stdout=outfile,
                    check=True
                )

    - name: Push Local Changes
      id: push-changes
      uses: stefanzweifel/git-auto-commit-action@v5.0.0
      with:
        commit_message: "Update SVG images for PlantUML diagrams"
        branch: ${{ github.head_ref }}
